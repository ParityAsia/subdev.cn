(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{166:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return o}));n(58),n(31),n(22),n(23),n(59),n(0);var a=n(179);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var l={id:"add_test",title:"\u6dfb\u52a0\u6d4b\u8bd5",sidebar_label:"\u6dfb\u52a0\u6d4b\u8bd5"},s=[{value:"\u6d4b\u8bd5\u7684\u91cd\u8981\u6027",id:"\u6d4b\u8bd5\u7684\u91cd\u8981\u6027",children:[]},{value:"Rust\u6d4b\u8bd5\u4ee3\u7801",id:"rust\u6d4b\u8bd5\u4ee3\u7801",children:[]},{value:"Runtime\u6a21\u5757\u6d4b\u8bd5",id:"runtime\u6a21\u5757\u6d4b\u8bd5",children:[{value:"\u521d\u59cb\u5316GenesisConfig",id:"\u521d\u59cb\u5316genesisconfig",children:[]},{value:"\u6d4b\u8bd5set_payment\u51fd\u6570",id:"\u6d4b\u8bd5set_payment\u51fd\u6570",children:[]},{value:"\u6d4b\u8bd5play\u51fd\u6570",id:"\u6d4b\u8bd5play\u51fd\u6570",children:[]}]}],i={rightToc:s},b="wrapper";function o(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(b,r({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"\u901a\u8fc7\u672c\u8282\uff0c\u4f60\u4f1a\u5b66\u5230\uff1a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Rust \u6d4b\u8bd5\u7684\u57fa\u672c\u77e5\u8bc6"),Object(a.b)("li",{parentName:"ul"},"\u5982\u4f55\u6d4b\u8bd5Runtime\u6a21\u5757"),Object(a.b)("li",{parentName:"ul"},"\u5982\u4f55\u5728\u6d4b\u8bd5\u91cc\u521d\u59cb\u5316GenesisConfig")),Object(a.b)("h2",{id:"\u6d4b\u8bd5\u7684\u91cd\u8981\u6027"},"\u6d4b\u8bd5\u7684\u91cd\u8981\u6027"),Object(a.b)("p",null,"\u4e3a\u529f\u80fd\u6a21\u5757\u7f16\u5199\u6d4b\u8bd5\uff0c\u662f\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u7f3a\u7701\u7684\u4e00\u4e2a\u73af\u8282\uff0c\u5b8c\u5907\u7684\u6d4b\u8bd5\u80fd\u591f\uff1a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u786e\u4fdd\u4ee3\u7801\u7684\u6267\u884c\u7b26\u5408\u9884\u671f\uff1b"),Object(a.b)("li",{parentName:"ul"},"\u589e\u5f3a\u91cd\u6784\u65f6\u7684\u4fe1\u5fc3\uff1b"),Object(a.b)("li",{parentName:"ul"},"\u4ece\u4ee3\u7801\u7684\u4f7f\u7528\u89d2\u5ea6\uff0c\u63d0\u5347\u4ee3\u7801\u7684\u8bbe\u8ba1\u7b49\u3002")),Object(a.b)("p",null,"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6d4b\u8bd5\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u5355\u5143\u6d4b\u8bd5\uff0cmock\u5b9e\u73b0\u4ee3\u7801\u4e2d\u7684\u4f9d\u8d56\u5982\u5176\u5b83\u529f\u80fd\u6a21\u5757\uff0c\u4ec5\u6d4b\u8bd5\u5f53\u524d\u51fd\u6570\u7684\u529f\u80fd\uff1b"),Object(a.b)("li",{parentName:"ul"},"\u96c6\u6210\u6d4b\u8bd5\uff0c\u4e0dmock\u5b9e\u73b0\u4ee3\u7801\u4e2d\u7684\u4f9d\u8d56\uff0c\u5bf9\u591a\u4e2a\u529f\u80fd\u6a21\u5757\u6574\u4f53\u8003\u8651\uff0c\u8fdb\u884c\u6d4b\u8bd5\uff1b"),Object(a.b)("li",{parentName:"ul"},"End to End \u6d4b\u8bd5\uff0c\u662f\u9762\u5411\u5f53\u524d\u7cfb\u7edf\u4e0e\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\u4e4b\u95f4\u7684\u6d4b\u8bd5\u3002")),Object(a.b)("p",null,"\u5f53\u6211\u4eec\u5728\u4f7f\u7528Substrate\u8fdb\u884c\u5f00\u53d1\u65f6\uff0c\u4e3b\u8981\u4f1a\u4f7f\u7528\u5230\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u6309\u9700\u9009\u62e9\u3002\u4e00\u4e2a\u6700\u4f73\u5b9e\u8df5\u662f\uff0c",Object(a.b)("strong",{parentName:"p"},"\u786e\u4fdd\u81ea\u5b9a\u4e49\u7684runtime\u6a21\u5757\u6709\u826f\u597d\u7684\u6d4b\u8bd5\u8986\u76d6"),"\u3002"),Object(a.b)("h2",{id:"rust\u6d4b\u8bd5\u4ee3\u7801"},"Rust\u6d4b\u8bd5\u4ee3\u7801"),Object(a.b)("p",null,"Rust\u6d4b\u8bd5\u4ee3\u7801\u901a\u5e38\u4f1a\u548c\u5b9e\u73b0\u4ee3\u7801\u653e\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u6216\u76f8\u540c\u7684\u76ee\u5f55\u4e0b\uff0c\u53d6\u51b3\u4e8e\u6d4b\u8bd5\u4ee3\u7801\u7684\u6570\u91cf\uff0c\u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003",Object(a.b)("a",r({parentName:"p"},{href:"https://doc.rust-lang.org/book/ch11-03-test-organization.html"}),"Rust book"),"\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"pub fn add_two(a: i32) -> i32 {\n    a + 2\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_add_two() {\n        assert_eq!(4, add_two(2));\n    }\n}\n")),Object(a.b)("p",null,"\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u70b9\u5305\u62ec\uff1a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u6d4b\u8bd5\u4ee3\u7801\u4f7f\u7528\u5c5e\u6027",Object(a.b)("inlineCode",{parentName:"li"},"#[cfg(test)]"),"\u8fdb\u884c\u6807\u8bc6"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"use super::*"),"\u7528\u6765\u5f15\u5165\u5f53\u524d\u6a21\u5757\u7684\u529f\u80fd\u4ee3\u7801"),Object(a.b)("li",{parentName:"ul"},"\u6d4b\u8bd5\u51fd\u6570\u901a\u8fc7\u5c5e\u6027",Object(a.b)("inlineCode",{parentName:"li"},"#[test]"),"\u8fdb\u884c\u6807\u8bc6"),Object(a.b)("li",{parentName:"ul"},"\u65ad\u8a00\u65b9\u5f0f\u6709\uff1a",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"\u8868\u8fbe\u5f0f\u7684\u503c\u4e3atrue\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"assert!(expression)")),Object(a.b)("li",{parentName:"ul"},"\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u671f\u671b\u7684\u503c\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"assert_eq!(expected, expression)")),Object(a.b)("li",{parentName:"ul"},"\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u662f\u5176\u5b83\u4e0d\u76f8\u5173\u7684\u503c\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"assert_ne!(other, expression)")),Object(a.b)("li",{parentName:"ul"},"\u5f02\u5e38\u53d1\u751f\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"#[should_panic]")),Object(a.b)("li",{parentName:"ul"},"Substrate\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u7684\u65ad\u8a00\uff1a",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"\u7ed3\u679c\u4e3a",Object(a.b)("inlineCode",{parentName:"li"},"Ok(())"),"\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"assert_ok!(expreesion)")),Object(a.b)("li",{parentName:"ul"},"\u7ed3\u679c\u4e3a",Object(a.b)("inlineCode",{parentName:"li"},"Err(error_info)"),"\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"assert_err!(expression, error_info)")),Object(a.b)("li",{parentName:"ul"},"\u7ed3\u679c\u4e3a",Object(a.b)("inlineCode",{parentName:"li"},"Err(error_info)\uff0c\u5e76\u4e14\u4e0d\u4fee\u6539\u5b58\u50a8\u72b6\u6001"),"\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"assert_noop!(expression, error_info)"))))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u8fd0\u884c\u6d4b\u8bd5")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-shell"}),"// \u8fd0\u884c\u5f53\u524d\u76ee\u5f55\u4e0b\u7684src\u76ee\u5f55\u548ctests\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6d4b\u8bd5\ncargo test\n\n// \u8fd0\u884c\u5f53\u524d\u5de5\u4f5c\u7a7a\u95f4\u7684\u6240\u6709package\u4e0b\u7684\u6d4b\u8bd5\ncargo test --all\n\n// \u8fd0\u884cruntime\u8def\u5f84\u4e0b\u7684\u6240\u6709\u6d4b\u8bd5\uff0c\u7531cargo.toml\u7684`[dependencies.demo-node-runtime]`\u6807\u8bc6\ncargo test -p demo-node-runtime\n\n// \u8fd0\u884cruntime\u8def\u5f84\u4e0b\u5355\u4e2a\u6a21\u5757\u7684\u6d4b\u8bd5\ncargo test -p demo-node-runtime mymodule\n\n// \u83b7\u53d6\u66f4\u591a\u5e2e\u52a9\u4fe1\u606f\ncargo test --help\n")),Object(a.b)("p",null,"\u8fd0\u884c\u7ed3\u679c\u5927\u81f4\u5982\u4e0b\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"running 5 tests\ntest mymodule::tests::it_works_for_default_value ... ok\ntest mymodule::tests::play_should_work_for_lose ... ok\ntest mymodule::tests::set_payment_should_work ... ok\ntest mymodule::tests::play_should_work_for_win ... ok\ntest mymodule::tests::play_security_check_should_work ... ok\n\ntest result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out\n")),Object(a.b)("h2",{id:"runtime\u6a21\u5757\u6d4b\u8bd5"},"Runtime\u6a21\u5757\u6d4b\u8bd5"),Object(a.b)("p",null,"\u4e3a\u4e86\u6d4b\u8bd5\u6211\u4eec\u7684runtime\u6a21\u5757\uff0c\u9700\u8981\u9996\u5148\u5f15\u5165\u76f8\u5173\u7684\u5b9e\u73b0\u4ee3\u7801\u548c\u4f9d\u8d56\uff0c"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"use super::*;\n\nuse runtime_io::with_externalities;\nuse primitives::{H256, Blake2Hasher};\n// --snip--\n")),Object(a.b)("p",null,"Runtime\u6a21\u5757\u7684\u529f\u80fd\u88ab\u5c01\u88c5\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2amock\u7684",Object(a.b)("inlineCode",{parentName:"p"},"Test")," runtime\u7ed3\u6784\u4f53\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-Rust"}),"pub struct Test;\n")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Test")," runtime\u9700\u8981\u5b9e\u73b0\u88ab\u6d4b\u6a21\u5757\u4ee5\u53ca\u6240\u4f9d\u8d56\u7684runtime\u6a21\u5757\u7684\u914d\u7f6e\u63a5\u53e3\uff0c\u56de\u5fc6\u4e00\u4e0b\u6211\u4eec\u7684\u6a21\u5757\u63a5\u53e3\u5b9a\u4e49\uff0c\u81ea\u5b9a\u4e49\u7684\u6a21\u5757\u63a5\u53e3\u7ee7\u627fbalances\u7684\u63a5\u53e3\uff0c\u800c ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/paritytech/substrate/blob/master/srml/balances/src/lib.rs#L224"}),"balances\u6a21\u5757\u53c8\u7ee7\u627f\u4e86system\u7684\u63a5\u53e3"),"\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"pub trait Trait: balances::Trait {\n    type Event: From<Event<Self>> + Into<<Self as system::Trait>::Event>;\n}\n")),Object(a.b)("p",null,"\u4e00\u4e9b\u4e0d\u5173\u5fc3\u7684\u7c7b\u578b\u5982",Object(a.b)("inlineCode",{parentName:"p"},"Event"),"\u53ef\u4ee5\u7528unit\u4ee3\u66ff\uff0c\u8fd9\u662f\u56e0\u4e3aSubstrate\u4e3aunit\u7c7b\u578b\u63d0\u4f9b\u4e86\u591a\u6570\u63a5\u53e3\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002\u8fd9\u6837\uff0c\u63a5\u53e3\u7684\u5b9e\u73b0\u5206\u522b\u662f\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"impl system::Trait for Test {\n    type Origin = Origin;\n    // --snip--\n}\n\nimpl balances::Trait for Test {\n    type Balance = u64;\n    type OnFreeBalanceZero = ();\n    // --snip--\n}\n\nimpl Trait for Test {\n    type Event = ();\n}\n")),Object(a.b)("p",null,"\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bf9\u7528\u5230\u7684\u6a21\u5757\u5b9a\u4e49\u522b\u540d\uff0c\u65b9\u4fbf\u540e\u9762\u7684\u4f7f\u7528\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"type System = system::Module<Test>;\ntype Balances = balances::Module<Test>;\ntype mymodule = Module<Test>;\n")),Object(a.b)("p",null,"\u8fd8\u8bb0\u5f97runtime\u6a21\u5757\u4e2dcallable function\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f",Object(a.b)("inlineCode",{parentName:"p"},"Origin"),"\u679a\u4e3e\u7c7b\u578b\u5417\uff1f\u5728\u5b9e\u73b0\u4ee3\u7801\u4e2d\uff0c",Object(a.b)("inlineCode",{parentName:"p"},"construct_runtime!"),"\u5b8f\u901a\u8fc7\u8c03\u7528",Object(a.b)("inlineCode",{parentName:"p"},"impl_outer_origin! "),"\u81ea\u52a8\u4e3a\u6211\u4eec\u6dfb\u52a0\u4e86",Object(a.b)("inlineCode",{parentName:"p"},"Origin"),"\u7684\u5b9a\u4e49\u3002\u4f46\u662f\u5728\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u81ea\u5df1\u8c03\u7528",Object(a.b)("inlineCode",{parentName:"p"},"impl_outer_origin!"),"\u5e2e\u6211\u4eec\u751f\u6210runtime\u6240\u4f9d\u8d56\u7684",Object(a.b)("inlineCode",{parentName:"p"},"Origin"),"\u7c7b\u578b\uff0c\u5b8f\u89e3\u6790\u540e\u7684\u76f8\u5173\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/kaichaosun/substrate-real-estate-node/blob/master/runtime/expanded.rs#L4039"}),"\u8fd9\u91cc"),"\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"impl_outer_origin! {\n        pub enum Origin for Test {}\n}\n")),Object(a.b)("h3",{id:"\u521d\u59cb\u5316genesisconfig"},"\u521d\u59cb\u5316GenesisConfig"),Object(a.b)("p",null,"GenesisConfig\u5b58\u50a8\u4e86\u94fe\u4e0a\u7684\u539f\u59cb\u72b6\u6001\uff0c\u901a\u5e38\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316\uff1a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u9884\u7f6e\u7684\u8d26\u6237"),Object(a.b)("li",{parentName:"ul"},"ROOT key"),Object(a.b)("li",{parentName:"ul"},"\u8d26\u6237\u7684\u4f59\u989d\u7b49\u3002")),Object(a.b)("p",null,"\u8fd9\u91cc\u9996\u5148\u521d\u59cb\u5316\u4e86system\u6a21\u5757\u7684GenesisConfig\u4e3a\u6240\u9700\u7684\u9ed8\u8ba4\u503c\uff0c\u63a5\u7740\u521d\u59cb\u5316balances\u6a21\u5757\uff0c\u5c06Account ID\u4e3a1\u7684\u8d26\u6237\u4f59\u989d\u8bbe\u7f6e\u4e3a10\uff0cAccount ID\u4e3a2\u7684\u8d26\u6237\u4f59\u989d\u8bbe\u7f6e\u4e3a20\uff0c\u5176\u5b83\u7684\u5982\u4ea4\u6613\u8d39\u7528\u7b49\u8bbe\u7f6e\u4e3a0\uff0c\u65b9\u4fbf\u6211\u4eec\u8ba1\u7b97\u6d4b\u8bd5\u7ed3\u679c\u3002"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"fn new_test_ext() -> runtime_io::TestExternalities<Blake2Hasher> {\n    let (mut t, mut c) = system::GenesisConfig::<Test>::default().build_storage().unwrap();\n\n    let _ = balances::GenesisConfig::<Test>{\n        balances: vec![\n            (1, 10),\n            (2, 20),\n        ],\n        transaction_base_fee: 0,\n        transaction_byte_fee: 0,\n        existential_deposit: 0,\n        transfer_fee: 0,\n        creation_fee: 0,\n        vesting: vec![],\n    }.assimilate_storage(&mut t, &mut c).unwrap();\n\n    t.into()\n}\n")),Object(a.b)("h3",{id:"\u6d4b\u8bd5set_payment\u51fd\u6570"},"\u6d4b\u8bd5set_payment\u51fd\u6570"),Object(a.b)("p",null,"\u6211\u4eec\u901a\u8fc7\u5c5e\u6027",Object(a.b)("inlineCode",{parentName:"p"},"#[test]"),"\u6807\u8bc6\u4e86\u6211\u4eec\u7684\u6d4b\u8bd5\u51fd\u6570\u4e3a",Object(a.b)("inlineCode",{parentName:"p"},"set_payment_should_work"),"\u3002\u5f53payment\u503c\u4e3aNone\u65f6\uff0c\u8bbe\u7f6epayment\u4e3a\u53c2\u6570\u4f20\u5165\u7684\u503c\uff0c\u5f53payment\u6709\u503c\u65f6\uff0c\u4e0d\u505a\u4fee\u6539\u3002"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"#[test]\nfn set_payment_should_work() {\n    with_externalities(&mut new_test_ext(), || {\n        // Set payment when payment is none\n        assert_ok!(mymodule::set_payment(Origin::signed(1), 100));\n        assert_eq!(mymodule::payment(), Some(100));\n        assert_eq!(mymodule::pot(), 100);\n\n        // Set payment when payment is not none\n        assert_ok!(mymodule::set_payment(Origin::signed(1), 200));\n        assert_eq!(mymodule::payment(), Some(100));\n        assert_eq!(mymodule::pot(), 100);\n    });\n}\n")),Object(a.b)("h3",{id:"\u6d4b\u8bd5play\u51fd\u6570"},"\u6d4b\u8bd5play\u51fd\u6570"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u524d\u7f6e\u6821\u9a8c\u6761\u4ef6\u6d4b\u8bd5"),"\uff1a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u51fd\u6570\u8c03\u7528\u5e94\u5f53\u662f\u7ecf\u8fc7\u7b7e\u540d\u7684"),Object(a.b)("li",{parentName:"ul"},"Payment\u4e2d\u5b58\u50a8\u7684\u503c\u4e0d\u5e94\u4e3a\u7a7a"),Object(a.b)("li",{parentName:"ul"},"\u5f53\u7528\u6237\u7684\u4f59\u989d\u5c0f\u4e8ePayment\u4e2d\u7684\u503c\u65f6\uff0c\u5e94\u8fd4\u56de\u9519\u8bef"),Object(a.b)("li",{parentName:"ul"},"\u5f53\u7528\u6237\u7684\u4f59\u989d\u591a\u4e8ePayment\u4e2d\u7684\u503c\u662f\uff0c\u5e94\u8fd4\u56de\u6b63\u5e38")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),'#[test]\nfn play_security_check_should_work() {\n    with_externalities(&mut new_test_ext(), || {\n        // Test ensure_signed\n        assert_noop!(mymodule::play(Origin::ROOT), "bad origin: expected to be a signed origin");\n\n        // Test payment must be set\n        assert_noop!(mymodule::play(Origin::signed(2)), "Must have payment amount set");\n\n        // Check the balances in genesis config\n        assert_eq!(Balances::total_balance(&2), 20);\n\n        // set payment and pot, higher than the balances\n        <Payment<Test>>::put(30);\n        <Pot<Test>>::put(30);\n\n        assert_noop!(mymodule::play(Origin::signed(2)), "too few free funds in account");\n\n        // set payment and pot, lower than the balances\n        <Payment<Test>>::put(10);\n        <Pot<Test>>::put(10);\n        assert_ok!(mymodule::play(Origin::signed(2)));\n    })\n}\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u83b7\u80dc\u60c5\u666f\u6d4b\u8bd5"),"\uff1a"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u9996\u5148\u521d\u59cb\u5316\u6240\u9700\u7684\u5b58\u50a8\u72b6\u6001"),Object(a.b)("li",{parentName:"ul"},"\u8bbe\u5b9a\u968f\u673a\u79cd\u5b50"),Object(a.b)("li",{parentName:"ul"},"\u65ad\u8a00\u7528\u6237\u83b7\u80dc\u540e\u7684\u6570\u636e\u72b6\u6001")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"#[test]\nfn play_should_work_for_win() {\n    with_externalities(&mut new_test_ext(), || {\n        <Payment<Test>>::put(10);\n        <Pot<Test>>::put(30);\n        <Nonce<Test>>::put(1);\n        System::set_random_seed(H256::from_low_u64_be(100));\n\n        assert_ok!(mymodule::play(Origin::signed(2)));\n        assert_eq!(mymodule::payment(), Some(10));\n        assert_eq!(mymodule::pot(), 10);\n        assert_eq!(Balances::total_balance(&2), 40); // 20 - 10 (payment) + 30 (reward)\n        assert_eq!(mymodule::nonce(), 2);\n    })\n}\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u5931\u8d25\u60c5\u666f\u6d4b\u8bd5\uff1a")),Object(a.b)("p",null,"\u548c\u83b7\u80dc\u60c5\u666f\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6211\u4eec\u9009\u7528\u4e86\u4e0d\u540c\u7684\u968f\u673a\u79cd\u5b50\uff0c\u4ece\u800c\u4f7f\u7528\u6237\u5931\u8d25:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-rust"}),"#[test]\nfn play_should_work_for_lose() {\n    with_externalities(&mut new_test_ext(), || {\n        <Payment<Test>>::put(10);\n        <Pot<Test>>::put(30);\n        <Nonce<Test>>::put(1);\n        System::set_random_seed(H256::from_low_u64_be(10));\n\n        assert_ok!(mymodule::play(Origin::signed(2)));\n        assert_eq!(mymodule::payment(), Some(10));\n        assert_eq!(mymodule::pot(), 40);\n        assert_eq!(Balances::total_balance(&2), 10);\n        assert_eq!(mymodule::nonce(), 2);\n    })\n}\n")),Object(a.b)("p",null,"\u5b8c\u6574\u7684\u6d4b\u8bd5\u4ee3\u7801\u53ef\u53c2\u8003",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/kaichaosun/substrate-coin-flip/blob/master/runtime/src/mymodule.rs#L130-L280"}),"\u8fd9\u91cc"),"."))}o.isMDXComponent=!0},179:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a),l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)};var b="mdxType",o={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,b=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,c=p[i+"."+u]||p[u]||o[u]||l;return n?r.a.createElement(c,Object.assign({},{ref:t},b,{components:n})):r.a.createElement(c,Object.assign({},{ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[b]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<l;u++)s[u]=n[u];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);